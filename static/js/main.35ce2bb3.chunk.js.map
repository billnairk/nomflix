{"version":3,"sources":["asset/noimage.jpeg","api.js","Component/Section.js","Component/Loader.js","Component/Message.js","Component/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Component/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Component/Rotuer.js","Component/GlobalStyles.js","Component/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","tvApi","get","id","append_to_response","term","query","encodeURIComponent","console","log","moviesApi","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","undefined","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","type","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Head","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","Routers","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35ce2bb3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noimage.4e5b46ed.jpeg\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"a6bcd87dd7b6a4763bd8e5dac6e662fa\",\n    language: \"en-US\",\n  },\n});\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nconsole.log(tvApi.topRated());\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 25px;\n  margin-top: 50px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      Loading...\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  font-weight: 600;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.3s linear; ;;;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n  line-height: 14px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 100%;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../asset/noimage.jpeg\").default\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 20 ? `${title.substring(0, 15)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Component/Section\";\nimport Loader from \"../../Component/Loader\";\nimport Message from \"../../Component/Message\";\nimport Poster from \"../../Component/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={\n                  movie.release_date == undefined\n                    ? \"\"\n                    : movie.release_date.substring(0, 4)\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error}></Message>}\n      </Container>\n    )}\n    ;\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport { moviesApi } from \"../../api\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n  // 전체 API 요청\n  // 각각의 요청을 분리된 함수로 만들어서 따로 요청 가능\n  // 자바스크립트는 요청을 기다려주지 않는데 이때 요청에 대한 답(성공,실패)을 받기 전까지 기다리기 위해 async await 사용.\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying, // nowPlaying = nowPlaying: nowPlaying\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movies information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        loading={loading}\n        error={error}\n      ></HomePresenter>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Component/Section\";\nimport Loader from \"../../Component/Loader\";\nimport Message from \"../../Component/Message\";\nimport Poster from \"../../Component/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error}></Message>}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport { tvApi } from \"../../api\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find movies information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      ></TVPresenter>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Component/Loader\";\nimport Section from \"../../Component/Section\";\nimport Message from \"../../Component/Message\";\nimport Poster from \"../../Component/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px 20px;\n`;\n\n// from에서는 submit 이벤트를 차단.\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  error,\n  searchTerm,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      {/* value를 가지는 이유는 input을 제어하기 위함이다. */}\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        type=\"text\"\n        value={searchTerm}\n        onChange={updateTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader></Loader>\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Message color=\"#e74c3c\" text={error}></Message>}\n    {tvResults &&\n      movieResults &&\n      tvResults.length === 0 &&\n      movieResults.length === 0 && (\n        <Message text=\"Nothing Found\" color=\"#95a5a6\"></Message>\n      )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    try {\n      this.setState({ loading: true });\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      ></SearchPresenter>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Head = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 5px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Header = ({ location: { pathname } }) => (\n  <Head>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">Tv</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Head>\n);\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Component/Loader\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0px;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0px 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomfilx</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomfilx\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../asset/noimage.jpeg\").default\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date === undefined\n                ? \"\"\n                : result.release_date !== undefined\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time} min\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailContainer from \".\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    const {\n      location: { pathname },\n    } = props;\n    super(props);\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    // console.log(this.props);\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n  render() {\n    const { result, error, loading } = this.state;\n    return (\n      <DetailPresenter\n        result={result}\n        loading={loading}\n        error={error}\n      ></DetailPresenter>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"../Routes/Home\";\nimport TV from \"../Routes/TV\";\nimport Search from \"../Routes/Search\";\nimport Header from \"../Component/Header\";\nimport Detail from \"../Routes/Detail\";\n\nfunction Routers() {\n  return (\n    <Router>\n      <>\n        <Header />\n        {/* path = 어느 경로에서 Route를 Render 할 지 알려준다. \n        component = 이 Route에 왔을 때 어떠한 컴포넌트가 보여질지 알려준다.*/}\n        <Switch>\n          <Route path=\"/\" exact component={Home}></Route>\n          <Route path=\"/tv\" exact component={TV}></Route>\n          {/* <Route path=\"/tv/popular\" render={() => <h1>Popular</h1>}></Route> */}\n          <Route path=\"/search\" component={Search}></Route>\n          <Route path=\"/movie/:id\" component={Detail}></Route>\n          <Route path=\"/show/:id\" component={Detail}></Route>\n          <Redirect from=\"*\" to=\"/\"></Redirect>\n        </Switch>\n      </>\n    </Router>\n  );\n}\n\nexport default Routers;\n","// import { createGlobalStyle } from \"styled-components\";\nimport { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n  ${reset};\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  *{\n    box-sizing: border-box;\n  }\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 12px;\n    background-color: rgba(20, 20, 20, 1);\n    color: white;\n    padding-top: 50px;\n    color: white;\n  }\n`;\n\nexport default globalStyles;\n","import Router from \"../Component/Rotuer\";\nimport GlobalStyles from \"./GlobalStyles\";\nfunction App() {\n  return (\n    <>\n      <GlobalStyles></GlobalStyles>\n      <Router></Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Component/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}